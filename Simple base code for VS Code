import pygame
# this is a temporary rectangle to represent one of our fighters. as we add more
# actions, it will get more complex. right now, this just puts our little
# rectangle dude on the map. once we have the players, we will replace rects with
# them.
# Fighter class
class Fighter():
    def __init__(self, x, y, data, sprite_sheet, animation_steps):
        self.size = data[0]
        self.flip = False
        self.animation_list = self.load_images(sprite_sheet, animation_steps)
        self.action = 0
        self.frame_index = 0
        self.image = self.animation_list[self.action][self.frame_index]
        self.rect = pygame.Rect(x, y, 80, 180)
        self.vel_y = 0
        self.jump = False
        self.attacking = False
        self.attack_type = 0
        self.health = 100

#loading images & extracting from spritesheet

    def load_images(self, sprite_sheet, animation_steps):
        animation_list = []
        for y, animation in enumerate(animation_steps):
            temp_img_list = []
            for x in range(animation):
                temp_img = sprite_sheet.subsurface(
                    x * self.size, y * self.size, self.size, self.size)
                temp_img_list.append(temp_img)
            animation_list.append(temp_img_list)
        return animation_list

   #control movement with key pressing. wasd for left fighter, arrows for right
    def move(self, screen_width, screen_height, surface, target):
        SPEED = 10
        GRAVITY = 2
        dx = 0
        dy = 0


        # can only perform other actions if not currently attacking
        if not self.attacking:
            #movement
            key = pygame.key.get_pressed()
            if key[pygame.K_a]:
                dx = -SPEED
            if key[pygame.K_d]:
                dx = SPEED
            #jump
            if key[pygame.K_w] and not self.jump:
                self.vel_y = -30
                self.jump = True
            #attack
            if key[pygame.K_r] or key[pygame.K_t]:
                self.attack(surface, target)
                #determine attack type
                if key[pygame.K_r]:
                    self.attack_type = 1
                if key[pygame.K_t]:
                    self.attack_type = 2

       # apply gravity 
        self.vel_y += GRAVITY
        dy += self.vel_y

        # ensure playerstay on screen, note 110 is based on tutorial, ours will
        # change with background
        if self.rect.left + dx < 0:
            dx = -self.rect.left
        if self.rect.right + dx > screen_width:
            dx = screen_width - self.rect.right
        if self.rect.bottom + dy > screen_height - 110:
            self.vel_y = 0
            self.jump = False
            dy = screen_height - 110 - self.rect.bottom
        # ensure players face each other
        if target.rect.centerx > self.rect.centerx:
            self.flip = False
        else:
            self.flip = True
    
        # update fighter position
        self.rect.x += dx
        self.rect.y += dy

    # this is something we can vary between different characters if we give more than two options!
    def attack(self, surface, target):
        self.attacking = True
        attack_offset = -2 * self.rect.width if self.flip else 0
        attacking_rect = pygame.Rect(
            self.rect.centerx + attack_offset, self.rect.y,
            2 * self.rect.width, self.rect.height
        )

        if attacking_rect.colliderect(target.rect):
            target.health -= 10

        pygame.draw.rect(surface, (0, 255, 0), attacking_rect)

    def draw(self, surface):
        pygame.draw.rect(surface, (255, 0, 0), self.rect)
        surface.blit(self.image, (self.rect.x, self.rect.y))

# Actuall game setup starts here

pygame.init()

# game window initialization
SCREEN_WIDTH = 1000
SCREEN_HEIGHT = 600
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Fighter Demo")

# set frame rate
clock = pygame.time.Clock()
FPS = 60

# Dummy sprite sheet
dummy_sheet = pygame.Surface((50, 50))
dummy_sheet.fill((0, 0, 0))
dummy_anim_steps = [1]  # One frame per action (no animation yet)

# Create fighters
fighter1 = Fighter(100, 300, [50], dummy_sheet, dummy_anim_steps)
fighter2 = Fighter(700, 300, [50], dummy_sheet, dummy_anim_steps)

# Main game loop
run = True
while run:
    clock.tick(FPS)
    screen.fill((200, 200, 200))  # light gray background

    # Move and draw fighters
    fighter1.move(SCREEN_WIDTH, SCREEN_HEIGHT, screen, fighter2)
    fighter1.draw(screen)
    fighter2.draw(screen)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    pygame.display.update()

pygame.quit()
